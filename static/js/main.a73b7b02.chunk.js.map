{"version":3,"sources":["components/Nav/nav.js","components/Jumbotron/jumbotron.js","components/Card/card.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","style","backgroundColor","fontSize","score","highScore","Jumbotron","children","Card","alt","name","src","image","id","onClick","setClicked","App","state","clickedArray","clicky","shuffleArray","arr","i","j","temp","length","Math","floor","random","setHighScore","_this","setState","includes","concat","Object","toConsumableArray","_this2","this","minHeight","backgroundImage","paddingTop","nav","Jumbotron_jumbotron","map","option","Card_card","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"o6DAkBeA,MAhBf,SAAaC,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAACC,gBAAiB,mBAC/DL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,MAAO,CAACE,SAAU,KAAxC,eACAN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wCACJF,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,2BAApB,gBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,kBACkBJ,EAAMQ,MADxB,kBAC8CR,EAAMS,oBCH7CC,MAJf,SAAmBV,GACjB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BJ,EAAMW,iBCa1CC,MAdf,SAAcZ,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVS,IAAKb,EAAMc,KACXC,IAAKf,EAAMgB,MACXC,GAAIjB,EAAMiB,GACVC,QAAS,kBAAMlB,EAAMmB,WAAWnB,EAAMiB,gBCgE/BG,6MApEbC,MAAQ,CACNb,MAAO,EACPC,UAAW,EACXa,aAAa,GACbC,YAGFC,aAAe,SAACC,GACd,IAAIC,EAAEC,EAAEC,EACR,IAAKF,EAAID,EAAII,OAAS,EAAGH,EAAI,EAAGA,IAC9BC,EAAIG,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IACpCE,EAAOH,EAAIC,GACXD,EAAIC,GAAKD,EAAIE,GACbF,EAAIE,GAAKC,EAEX,OAAOH,KAGTQ,aAAe,WACTC,EAAKb,MAAMb,OAAS,GAAK0B,EAAKb,MAAMb,OAAS0B,EAAKb,MAAMZ,WAC1DyB,EAAKC,SAAS,CACZ1B,UAAWyB,EAAKb,MAAMb,WAK5BW,WAAa,SAACF,IACiC,IAAzCiB,EAAKb,MAAMC,aAAac,SAASnB,GACnCiB,EAAKC,SAAS,CACZ3B,MAAO0B,EAAKb,MAAMb,MAAQ,EAC1Bc,aAAY,GAAAe,OAAAC,OAAAC,EAAA,EAAAD,CAAMJ,EAAKb,MAAMC,cAAjB,CAA+BL,IAC3CM,OAAQW,EAAKV,aAAaD,MAG5BW,EAAKC,SAAS,CACZ3B,MAAO,EACPc,aAAc,KAEhBY,EAAKD,yFAID,IAAAO,EAAAC,KACN,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BC,MAAO,CAACqC,UAAW,QAASC,gBAAiB,gJAAiJC,WAAY,KACrP3C,EAAAC,EAAAC,cAAC0C,EAAD,CACErC,MAAOiC,KAAKpB,MAAMb,MAClBC,UAAWgC,KAAKpB,MAAMZ,YAExBR,EAAAC,EAAAC,cAAC2C,EAAD,KACGvB,EAAOwB,IAAI,SAAAC,GACV,OACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CACEzC,MAAOgC,EAAKhC,MACZC,UAAW+B,EAAK/B,UAChBQ,GAAI+B,EAAO/B,GACXD,MAAOgC,EAAOhC,MACdG,WAAYqB,EAAKrB,wBA1Df+B,IAAMC,WCFxBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a73b7b02.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Nav(props){\n  return (\n    <div className=\"container rounded py-1\" style={{backgroundColor: \"rgba(0,0,0,.1)\"}}>\n      <div className=\"text-center my-4\">\n        <h1 className=\"title\" style={{fontSize: 50}}>MemoryClick</h1>\n        <h5><small>A React.js Memory Game</small></h5>\n        <p>Click each image <strong>only once</strong>! Good luck!</p>\n        <h5 className=\"score-counter text-uppercase\">\n          Current Score: {props.score} | High Score: {props.highScore}\n        </h5>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Nav;\n","import React from \"react\";\nimport \"./jumbotron.css\";\n\nfunction Jumbotron(props) {\n  return <div className=\"jumbotron col-lg-7 mt-4\">{props.children}</div>;\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./card.css\";\n\nfunction Card(props){\n  return (\n    <div className=\"\">\n      <img \n        className=\"click-item\" \n        alt={props.name} \n        src={props.image} \n        id={props.id} \n        onClick={() => props.setClicked(props.id)} \n      />\n    </div>\n  )\n}\n\nexport default Card;","import React from \"react\";\nimport Nav from \"./components/Nav/nav\";\nimport Jumbotron from \"./components/Jumbotron/jumbotron\";\nimport Card from \"./components/Card/card\";\nimport clicky from \"./components/clicky.json\";\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    highScore: 0,\n    clickedArray:[],\n    clicky\n  }\n\n  shuffleArray = (arr) => {\n    let i,j,temp;\n    for (i = arr.length - 1; i > 0; i--){\n      j = Math.floor(Math.random() * (i + 1));\n      temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n    return arr;\n  }\n\n  setHighScore = () => {\n    if (this.state.score >= 0 && this.state.score >= this.state.highScore){\n      this.setState({\n        highScore: this.state.score\n      });\n    }\n  }\n\n  setClicked = (id) => {\n    if (this.state.clickedArray.includes(id) === false){\n      this.setState({\n        score: this.state.score + 1,\n        clickedArray: [...this.state.clickedArray, id],\n        clicky: this.shuffleArray(clicky)\n      })\n    } else {\n      this.setState({\n        score: 0,\n        clickedArray: []\n      })\n      this.setHighScore();\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid memoryclick\" style={{minHeight: \"100vh\", backgroundImage: \"url('https://images.unsplash.com/photo-1533279443086-d1c19a186416?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80')\", paddingTop: 25}}>\n        <Nav \n          score={this.state.score} \n          highScore={this.state.highScore} \n        />\n        <Jumbotron>\n          {clicky.map(option => {\n            return (\n              <Card \n                score={this.score}\n                highScore={this.highScore}\n                id={option.id}\n                image={option.image}\n                setClicked={this.setClicked}\n              />\n            )\n          })}\n        </Jumbotron>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}